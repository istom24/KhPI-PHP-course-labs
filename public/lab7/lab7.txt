Лабораторна робота № 7
Тема: Робота з кешем в Web на PHP
Мета: Ознайомитися з механізмами кешування у веб-розробці.
Навчитися реалізовувати клієнтське кешування за допомогою
HTTP-заголовків, а також реалізовувати базове серверне
кешування в PHP з використанням файлової системи. Закріпити
розуміння принципів продуктивності вебзастосунків.
Завдання:
Реалізувати приклади клієнтського та серверного кешування
на PHP, а також протестувати їх у середовищі браузера.
Крок 1: Клієнтське кешування через заголовки HTTP
1. Створіть PHP-скрипт, який віддає CSS-файл або
зображення.
2. Додайте до відповіді заголовки кешування:
● Cache-Control: public, max-age=86400
● Expires: [дата +1 день]
● Content-Type: [відповідний MIME-тип]
3. Перевірте у браузері, що при повторному завантаженні
сторінки файл не запитується знову (перевірка через
вкладку «Network» → колонка «Size» має показувати (from
disk cache) або (cached)).
Крок 2: Серверне кешування у файл
1. Створіть PHP-скрипт generate-report.php, який
імітує генерацію великого HTML-звіту. Для цього
використайте:
● Затримку виконання sleep(3) для симуляції
тривалої обробки.
● Генерацію 1000 рядків таблиці (<table>), наприклад
з випадковими даними (імена, суми, дати).
2. Після першого запуску збережіть HTML-звіт у файл-кеш
(наприклад, cache/report.html).
3. При наступному запиті:
● Якщо файл cache/report.html існує і його час
зміни менше ніж 10 хвилин тому — повертайте вміст
цього файлу одразу, без затримки.
● Інакше — згенеруйте новий звіт, перезапишіть файл
кешу і поверніть результат.
Крок 3: Серверне кешування через PHP-сесію
1. Створіть скрипт session-cache.php, який генерує дані
(наприклад, список товарів або курсів валют), що
обчислюються з затримкою (sleep(2)).
2. Замість збереження до файлу, кешуйте результат у змінну
сесії:
3. При першому завантаженні скрипта дані формуються з
затримкою, а надалі — беруться з кешу в сесії.
Крок 4: Тестування
1. Створіть HTML-файл або форму, яка викликає відповідні
PHP-скрипти.
2. Перевірте:
● повторне завантаження ресурсів (кешовані чи ні),
● наскільки швидше виконується скрипт при
використанні кешу,
● зміну результатів після очищення або оновлення кешу.
Завдання:
1. РРеалізувати два приклади клієнтського кешування з
відповідними HTTP-заголовками.
2. Реалізувати серверне кешування: через файл і через
статичну властивість класу.
3. Продемонструвати, що кеш працює (наприклад, через
затримку або логування).
4. Надати приклад використання кожного підходу.
Звіт:
Звіт має включати в себе PHP-файли з реалізацією.
Окрім самих класів і методів, обов’язково має бути
“клієнтський код” — приклади звернення до кешованих
ресурсів (HTML-файли, JS-запити тощо), а також пояснення
до реалізації, скриншоти із браузера (вкладка Network) для
підтвердження кешування.